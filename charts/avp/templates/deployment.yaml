apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "{{.Values.appName}}"
  name: "{{.Values.project}}-{{.Values.appName}}"
  namespace: "{{.Values.namespace}}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: "{{.Values.appName}}"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: "{{.Values.appName}}"
    spec:
      serviceAccountName: {{ include "serviceAccountName" . }}
      imagePullSecrets:
        - name: regcred
      containers:
      - image: "{{.Values.image}}"
        imagePullPolicy: IfNotPresent
        name: "{{.Values.appName}}"
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/rapid/
          name: rapid-share-upload
        - mountPath: /mnt/swd/
          name: swd-share-upload
        env:
        - name: ROOT_PATH
          value: "{{ .Values.rootPath }}"
        - name: THREAD_SLEEP
          value: "{{ .Values.threadSleep }}"
        envFrom:
          - secretRef: 
              name: {{ include "sercretName" . }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: rapid-share-upload
        csi:
          driver: file.csi.azure.com
          volumeAttributes:
            shareName: {{.Values.rapidShareName}}
            secretName: {{ include "sercretName" . }}
            mountOptions: "dir_mode=0777,file_mode=0777,cache=strict,actimeo=30"
      - name: swd-share-upload
        csi:
          driver: file.csi.azure.com
          volumeAttributes:
            shareName: {{.Values.swdShareName}}
            secretName: {{ include "sercretName" . }}
            mountOptions: "dir_mode=0777,file_mode=0777,cache=strict,actimeo=30"